name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          docker login ghcr.io -u $GITHUB_ACTOR --password-stdin <<< ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          docker pull ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:latest
          docker build . \
            --tag ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:$GITHUB_SHA \
            --tag ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:latest \
            --cache-from ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:latest \
            --label org.opencontainers.image.source=https://github.com/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}
          docker push ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:$GITHUB_SHA
          docker push ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email '$GITHUB_ACTOR@users.noreply.github.com'
      - name: Install Python
        uses: actions/setup-python@v1

      - name: Install bump2version
        run: |
          pip install --upgrade bump2version
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Pacakage and push Helm
        run: |
          VERSION=$(git tag | sort -r --version-sort | head -n1)
          VERSION=${VERSION#"ecommerce-orchestrator-"}
          VERSION=$(bumpversion --current-version $VERSION --dry-run --list patch)
          VERSION=${VERSION#"new_version="}
          helm package -u --app-version $GITHUB_SHA --version $VERSION chart
          docker pull quay.io/helmpack/chart-releaser:v1.1.1
          docker run -v $(pwd):/app quay.io/helmpack/chart-releaser:v1.1.1 cr upload -p /app -o ${{ github.event.repository.owner.login }} -r ${{ github.event.repository.name }} -t ${{ secrets.SERVICE_ACCOUNT_PAT }}
      - name: Create Helm index and push to GH pages
        run: |
          git pull
          git checkout gh-pages
          docker run -v $(pwd):/app quay.io/helmpack/chart-releaser:v1.1.1 cr index -p /app -o ${{ github.event.repository.owner.login }} -r ${{ github.event.repository.name }} -i /app -c https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }} -t ${{ secrets.SERVICE_ACCOUNT_PAT }}          git add .
          git commit -am "Updating helm package"
          git push
          git checkout master